services:
  redis_stage:
    image: redis/redis-stack:latest
    container_name:
      redis_stage
    environment:
      REDIS_ARGS: "--requirepass ${REDIS_PASSWORD} --user ${REDIS_USER} on >${REDIS_PASSWORD} ~* allcommands --user default off nopass nocommands"
    # ports:
    #   - "127.0.0.1:8001:8001"
    #   - ${REDIS_PORT}:${REDIS_PORT}
    expose:
      - ${REDIS_PORT}
    restart: always
    volumes:
      - /srv/stage/redis:/data
    networks:
      - stage_rearden
    hostname: redis_stage

  postgres_stage:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PW}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    container_name:
      postgres_stage
    expose:
      - ${DB_PORT}
    # ports:
    #   - ${DB_PORT}:${DB_PORT}
    networks:
      - stage_rearden
    volumes:
      - /srv/stage/psql:/var/lib/postgresql/data
    restart: always
    hostname: postgres_stage

  ollama_stage:
    image: ollama/ollama
    container_name: ollama_stage
    expose:
      - ${OLLAMA_PORT}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    networks:
      - stage_rearden
    restart: always
    hostname: ollama_stage

  chroma_stage:
    image: chromadb/chroma
    container_name: chroma_stage
    expose:
      - ${CHROMA_PORT}
    # ports:
    #   - ${CHROMA_PORT}:${CHROMA_PORT}
    networks:
      - stage_rearden
    volumes:
      - /srv/stage/chroma:/chroma/chroma
    restart: always
    hostname: chroma_stage

  back_stage:
    build:
      context: ../
      dockerfile: Dockerfile
    env_file:
      - ../.envs/.stage
    image:
      back_stage
    container_name:
      back_stage
    ports:
      - "${API_PORT}:8000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - stage_rearden
    volumes:
      - ../:/usr/src/app
    restart: always
    command: bash -c 'uvicorn main:app --proxy-headers --host 0.0.0.0'
    depends_on:
      - redis_stage
      - postgres_stage
      - ollama_stage
      - chroma_stage
    hostname: back_stage


volumes:
  rearden_db_stage:

networks:
  stage_rearden: {}
  