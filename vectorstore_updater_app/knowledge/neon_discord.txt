Protocol: neon
 Content: Welcome to the FAQs. Do not hesitate to ask anything in #general if your questions remain unanswered.**What is Neon EVM?**
Neon EVM is an Ethereum Virtual Machine operating as a smart contract on Solana. It gives developers the power to directly deploy Ethereum dApps with minimal code reconfiguration while benefiting from Solana's technical speed, scalability and low transaction fees. Neon EVM is built with security, decentralization, and sustainability in mind.

**How does Neon EVM Work?**
Neon EVM is a smart contract on Solana acting as the Ethereum Virtual Machine. It's compiled into Berkeley Packet Filter bytecode, a format that can be executed on Solana. This allows Neon EVM to receive Solana transactions that contain wrapped Ethereum-like transactions and process them on Solana according to Ethereum rules. Get more details here: https://docs.neonfoundation.io/docs/about/how_it_works 

**How can I start building on Neon?**
To begin building on Neon, follow our Quick Start Guide. Porting and deploying your existing EVM contracts onto Neon using Foundry, Remix, or Hardhat is also an easy and seamless process. Read the Quick Start Guide here: https://docs.neonfoundation.io/docs/quick_start 

**Why is Neon good for Ethereum dApps?**
As a smart contract on Solana, Neon EVM benefits from Solana’s low gas fees (no less than 0.000015 SOL per transaction) and high throughput (+2,000 TPS). This arguably makes it the cheapest and most efficient way to run Ethereum dApps.

Neon EVM doesn't require any significant changes to run existing Ethereum smart contracts, with all the advantages and innovations of Solana. In addition, the Neon EVM provides access to many familiar Ethereum developer tools, including MetaMask, Remix, Hardhat, Truffle, and Brownie. Neon is the perfect platform for Ethereum dApps to tap into the Solana ecosystem.**What makes Neon EVM unique?**
Neon EVM is the only infrastructure layer that combines the technical advantages of Solana with the vibrant development community and expertise of Ethereum. In general, it's much easier to port over existing EVM smart contract code than to build natively on Solana from scratch.

**What Neon-native tools are currently available?**
The following tools are available on Neon:

**NeonScan:** Neon EVM’s block explorer [https://neonscan.org/] 
**NeonPass:** A tool for transferring tokens between Solana and Neon: available as an App [https://neonpass.live/] and an npm package [https://docs.neonfoundation.io/docs/developing/integrate/neon_transfer] 
**Neon Faucet:** Provides NEON tokens on Devnet for testing purposes [https://neonfaucet.org/] 

**What exactly is Neon Pass?**
NeonPass is an open-source service that facilitates native token transfers between Solana and Neon EVM, including the NEON SPL token. The native token transfer process involves no wrapping and an intuitive UI. To use NeonPass, you must have access to two wallets: a Solana wallet, such as Phantom, and an EVM wallet, such as MetaMask. Learn more: https://docs.neonfoundation.io/docs/token_transferring/neonpass_usage 

**What is Neon's roadmap?**
You can view our roadmap on our website here: https://neon-labs.org/You can view it here: https://medium.com/@neon_evm/neon-tge-and-token-allocation-45a063183087